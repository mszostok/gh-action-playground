# This is a main workflow for testing different GitHub Actions
name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      gitCommitSHA:
        description: Optional
        required: false
      overrideDockerTag:
        description: Docker images tag. If not provided images generated from git commit SHA are used.
        required: false
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Share data between steps, and run always (post-step)
#   network:
#     name: "network create and clean-up"
#     runs-on: ubuntu-latest
#     steps:
#       - name: Just first step
#         run: echo "First step"
#       - id: get-ip
#         run: |
#           AUTHORIZED=$(printf "%s/32" $(curl ifconfig.me))
#           echo "::set-output name=JOB_IP::$AUTHORIZED"
#       - name: Error after setting value
#         run: echo "Exit with 1"; exit 1
#       - name: Get IP
#         # if: ${{ steps.get-ip.outcome == 'success' }} - Does not work, `Evaluating: (success() && (steps.get-ip.outcome == 'success'))` -> "If your if expression does not contain any of the status functions it will automatically result with success(). "
#         # if: ${{ always() }}
#         if: ${{ always() && steps.get-ip.outcome == 'success' && steps.get-ip.outputs.JOB_IP != null }}
#         env:
#           JOB_IP: "${{ steps.get-ip.outputs.JOB_IP }}"
#         run: |
#           echo "The exported IP is $JOB_IP"
  
  input-envs:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository (Latest)
        uses: actions/checkout@v2
        if: github.event.inputs.gitCommitSHA == ''
      - name: Clone Repository (Custom Ref)
        uses: actions/checkout@v2
        if: github.event.inputs.gitCommitSHA != ''
        with:
          ref: ${{ github.event.inputs.gitCommitSHA }}
      - name: set-env
        run: |
          echo "DOCKER_TAG=123" >> $GITHUB_ENV
          echo $OVERRIDE_DOCKER_TAG
      - name: echo-env
        env:
          OVERRIDE_DOCKER_TAG: ${{ github.event.inputs.overrideDockerTag }} 
        run:
          export DOCKER_TAG="${OVERRIDE_DOCKER_TAG:-${DOCKER_TAG}}"
          echo "$DOCKER_TAG"
          

  # Share ip between jobs
#   create-ip:
#     runs-on: ubuntu-latest
#     outputs:
#       job_ip: ${{ steps.enable-network.outputs.job_ip }}
#     steps:
#       - id: enable-network
#         run: |
#          AUTHORIZED=$(printf "%s/32" $(curl ifconfig.me))
#          echo "::set-output name=JOB_IP::$AUTHORIZED"
#       - run:
#           exit 1

#   read-ip:
#     needs: create-ip
#     runs-on: ubuntu-latest
#     if: ${{ always() && needs.create-ip.outputs.JOB_IP != null }}
#     steps:
#       - env:
#           JOB_IP: "${{needs.create-ip.outputs.JOB_IP}}"
#         run: |
#           echo "The exported IP is $JOB_IP"

#   # Generates and uploads artifact with current SHA name
#   upload-artifact:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#     - uses: actions/checkout@v2
#     - run: echo hello > world.txt
#     - id: upload-data
#       uses: actions/upload-artifact@v2
#       with:
#         name: art_${{github.sha}}
#         path: world.txt
#         retention-days: 1 # Default 90 days
        
#   # Downloads and prints the artifact with current SHA name
#   download-artifact:
#     needs: [upload-artifact]
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - uses: actions/download-artifact@v2
#       with:
#         name: art_${{github.sha}}
#     - name: Display structure
#       run: ls -R
#     - name: Display downloaded file
#       run: cat world.txt

